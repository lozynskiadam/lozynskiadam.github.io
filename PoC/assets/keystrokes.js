(function(r,h){typeof exports=="object"&&typeof module<"u"?h(exports):typeof define=="function"&&define.amd?define(["exports"],h):(r=typeof globalThis<"u"?globalThis:r||self,h(r.keystrokes={}))})(this,function(r){"use strict";var X=Object.defineProperty;var Y=(r,h,y)=>h in r?X(r,h,{enumerable:!0,configurable:!0,writable:!0,value:y}):r[h]=y;var a=(r,h,y)=>(Y(r,typeof h!="symbol"?h+"":h,y),y);class h{constructor(e){a(this,"_onPressed");a(this,"_onPressedWithRepeat");a(this,"_onReleased");a(this,"_isPressed");a(this,"_identity");this._isPressed=!1,this._identity=e,typeof e=="function"?this._onPressedWithRepeat=e:(this._onPressed=e.onPressed,this._onPressedWithRepeat=e.onPressedWithRepeat,this._onReleased=e.onReleased)}get isEmpty(){return!this._onPressed&&!this._onPressedWithRepeat&&!this._onReleased}isOwnHandler(e){return this._identity===e}executePressed(e){var t,n;this._isPressed||(t=this._onPressed)==null||t.call(this,e),this._isPressed=!0,(n=this._onPressedWithRepeat)==null||n.call(this,e)}executeReleased(e){var t;this._isPressed&&((t=this._onReleased)==null||t.call(this,e)),this._isPressed=!1}}const d=class d{constructor(e,t,n={}){a(this,"_normalizedKeyCombo");a(this,"_parsedKeyCombo");a(this,"_handlerState");a(this,"_lastActiveKeyPresses");a(this,"_isPressedWithFinalUnit");a(this,"_sequenceIndex");a(this,"_keyComboEventMapper");this._normalizedKeyCombo=d.normalizeKeyCombo(e),this._parsedKeyCombo=d.parseKeyCombo(e),this._handlerState=new h(n),this._keyComboEventMapper=t,this._lastActiveKeyPresses=[],this._isPressedWithFinalUnit=null,this._sequenceIndex=0}static parseKeyCombo(e){if(d._parseCache[e])return d._parseCache[e];const t=e.toLowerCase();let n="",s=[],o=[s],c=[o];const K=[c];let _=!1;for(let l=0;l<e.length;l+=1)t[l]==="\\"?_=!0:(t[l]==="+"||t[l]===">"||t[l]===",")&&!_?n=t[l]:t[l].match(/[^\s]/)&&(n&&(n===","?(s=[],o=[s],c=[o],K.push(c)):n===">"?(s=[],o=[s],c.push(o)):n==="+"&&(s=[],o.push(s)),n=""),_=!1,s.push(t[l]));const p=K.map(l=>l.map(Q=>Q.map(V=>V.join(""))));return d._parseCache[e]=p,p}static stringifyKeyCombo(e){return e.map(t=>t.map(n=>n.map(s=>s==="+"?"\\+":s===">"?"\\>":s===","?"\\,":s).join("+")).join(">")).join(",")}static normalizeKeyCombo(e){if(d._normalizationCache[e])return d._normalizationCache[e];const t=this.stringifyKeyCombo(this.parseKeyCombo(e));return d._normalizationCache[e]=t,t}get isPressed(){return!!this._isPressedWithFinalUnit}get sequenceIndex(){return this.isPressed?this._parsedKeyCombo.length:this._sequenceIndex}isOwnHandler(e){return this._handlerState.isOwnHandler(e)}executePressed(e){var t;(t=this._isPressedWithFinalUnit)!=null&&t.has(e.key)&&this._handlerState.executePressed(this._wrapEvent(this._lastActiveKeyPresses,{key:e.key,event:e}))}executeReleased(e){var t;(t=this._isPressedWithFinalUnit)!=null&&t.has(e.key)&&(this._handlerState.executeReleased(this._wrapEvent(this._lastActiveKeyPresses,{key:e.key,event:e})),this._isPressedWithFinalUnit=null)}updateState(e){const t=this._parsedKeyCombo[this._sequenceIndex];let n=0;for(const s of t){let o=n;for(const c of s){let K=!1;for(let _=n;_<e.length;_+=1){const p=e[_];if(c===p.key){_>o&&(o=_),K=!0;break}}if(!K){this._handlerState.isEmpty&&(this._isPressedWithFinalUnit=null);return}}n=o}for(const s of e){let o=!1;for(const c of t)for(const K of c)if(s.key===K){o=!0;break}if(!o){this._lastActiveKeyPresses.length=0,this._sequenceIndex=0;return}}if(this._lastActiveKeyPresses[this._sequenceIndex]=e.slice(0),this._sequenceIndex<this._parsedKeyCombo.length-1){this._sequenceIndex+=1;return}this._sequenceIndex=0,this._isPressedWithFinalUnit=new Set(t[t.length-1])}_wrapEvent(e,t){return{...this._keyComboEventMapper(e,t),keyCombo:this._normalizedKeyCombo,keyEvents:e.flat().map(s=>s.event),finalKeyEvent:t.event}}};a(d,"_parseCache",{}),a(d,"_normalizationCache",{});let y=d;const g={addEventListener:(...i)=>{},removeEventListener:(...i)=>{},dispatchEvent:(...i)=>{}},E={userAgent:""},m=()=>typeof document<"u"?document:g,R=()=>typeof navigator<"u"?navigator:E,w=()=>R().userAgent.toLocaleLowerCase().includes("mac");let b=!1;const A=i=>{!w()||i.key!=="Meta"||(b=!0)},M=i=>{!b||i.key!=="Meta"||(b=!1,C())},f=new Map,B=i=>{f.set(i.key,i)},I=i=>{f.delete(i.key)},C=()=>{for(const i of f.values()){const e=new KeyboardEvent("keyup",{key:i.key,code:i.code,bubbles:!0,cancelable:!0});m().dispatchEvent(e)}f.clear()},L=i=>{try{const e=()=>i();return addEventListener("focus",e),()=>{removeEventListener("focus",e)}}catch{}},O=i=>{try{const e=()=>{C(),i()};return addEventListener("blur",e),()=>removeEventListener("blur",e)}catch{}},W=i=>{try{const e=t=>(B(t),A(t),i({key:t.key,originalEvent:t,composedPath:()=>t.composedPath(),preventDefault:()=>t.preventDefault()}));return m().addEventListener("keydown",e),()=>m().removeEventListener("keydown",e)}catch{}},z=i=>{try{const e=t=>(I(t),M(t),i({key:t.key,originalEvent:t,composedPath:()=>t.composedPath(),preventDefault:()=>t.preventDefault()}));return m().addEventListener("keyup",e),()=>m().removeEventListener("keyup",e)}catch{}};class k{constructor(e={}){a(this,"_isActive");a(this,"_unbinder");a(this,"_onActiveBinder");a(this,"_onInactiveBinder");a(this,"_onKeyPressedBinder");a(this,"_onKeyReleasedBinder");a(this,"_keyComboEventMapper");a(this,"_selfReleasingKeys");a(this,"_keyRemap");a(this,"_handlerStates");a(this,"_keyComboStates");a(this,"_keyComboStatesArray");a(this,"_activeKeyPresses");a(this,"_activeKeyMap");a(this,"_watchedKeyComboStates");this._isActive=!0,this._onActiveBinder=()=>{},this._onInactiveBinder=()=>{},this._onKeyPressedBinder=()=>{},this._onKeyReleasedBinder=()=>{},this._keyComboEventMapper=()=>({}),this._selfReleasingKeys=[],this._keyRemap={},this._handlerStates={},this._keyComboStates={},this._keyComboStatesArray=[],this._activeKeyPresses=[],this._activeKeyMap=new Map,this._watchedKeyComboStates={},this.bindEnvironment(e)}get pressedKeys(){return this._activeKeyPresses.map(e=>e.key)}bindKey(e,t){var s;e=e.toLowerCase();const n=new h(t);(s=this._handlerStates)[e]??(s[e]=[]),this._handlerStates[e].push(n)}unbindKey(e,t){e=e.toLowerCase();const n=this._handlerStates[e];if(n)if(t)for(let s=0;s<n.length;s+=1)n[s].isOwnHandler(t)&&(n.splice(s,1),s-=1);else n.length=0}bindKeyCombo(e,t){var s;e=y.normalizeKeyCombo(e);const n=new y(e,this._keyComboEventMapper,t);(s=this._keyComboStates)[e]??(s[e]=[]),this._keyComboStates[e].push(n),this._keyComboStatesArray.push(n)}unbindKeyCombo(e,t){e=y.normalizeKeyCombo(e);const n=this._keyComboStates[e];if(n)if(t){for(let s=0;s<n.length;s+=1)if(n[s].isOwnHandler(t)){for(let o=0;o<this._keyComboStatesArray.length;o+=1)this._keyComboStatesArray[o]===n[s]&&(this._keyComboStatesArray.splice(o,1),o-=1);n.splice(s,1),s-=1}}else n.length=0}checkKey(e){return this._activeKeyMap.has(e.toLowerCase())}checkKeyCombo(e){return this._ensureCachedKeyComboState(e).isPressed}checkKeyComboSequenceIndex(e){return this._ensureCachedKeyComboState(e).sequenceIndex}bindEnvironment(e={}){this.unbindEnvironment(),this._onActiveBinder=e.onActive??L,this._onInactiveBinder=e.onInactive??O,this._onKeyPressedBinder=e.onKeyPressed??W,this._onKeyReleasedBinder=e.onKeyReleased??z,this._keyComboEventMapper=e.mapKeyComboEvent??(()=>({})),this._selfReleasingKeys=e.selfReleasingKeys??[],this._keyRemap=e.keyRemap??{};const t=this._onActiveBinder(()=>{this._isActive=!0}),n=this._onInactiveBinder(()=>{this._isActive=!1}),s=this._onKeyPressedBinder(c=>{this._handleKeyPress(c)}),o=this._onKeyReleasedBinder(c=>{this._handleKeyRelease(c)});this._unbinder=()=>{t==null||t(),n==null||n(),s==null||s(),o==null||o()}}unbindEnvironment(){var e;(e=this._unbinder)==null||e.call(this)}_ensureCachedKeyComboState(e){e=y.normalizeKeyCombo(e),this._watchedKeyComboStates[e]||(this._watchedKeyComboStates[e]=new y(e,this._keyComboEventMapper));const t=this._watchedKeyComboStates[e];return t.updateState(this._activeKeyPresses),t}_handleKeyPress(e){if(!this._isActive)return;e={...e,key:e.key.toLowerCase()};const t=this._keyRemap[e.key];t&&(e.key=t);const n=this._handlerStates[e.key];if(n)for(const o of n)o.executePressed(e);const s=this._activeKeyMap.get(e.key);if(s)s.event=e;else{const o={key:e.key,event:e};this._activeKeyMap.set(e.key,o),this._activeKeyPresses.push(o)}this._updateKeyComboStates();for(const o of this._keyComboStatesArray)o.executePressed(e)}_handleKeyRelease(e){e={...e,key:e.key.toLowerCase()};const t=this._keyRemap[e.key];t&&(e.key=t);const n=this._handlerStates[e.key];if(n)for(const s of n)s.executeReleased(e);if(this._activeKeyMap.has(e.key)){this._activeKeyMap.delete(e.key);for(let s=0;s<this._activeKeyPresses.length;s+=1)if(this._activeKeyPresses[s].key===e.key){this._activeKeyPresses.splice(s,1),s-=1;break}}this._tryReleaseSelfReleasingKeys(),this._updateKeyComboStates();for(const s of this._keyComboStatesArray)s.executeReleased(e)}_updateKeyComboStates(){for(const e of this._keyComboStatesArray)e.updateState(this._activeKeyPresses)}_tryReleaseSelfReleasingKeys(){for(const e of this._activeKeyPresses)for(const t of this._selfReleasingKeys)e.key===t&&this._handleKeyRelease(e.event)}}let P,v;const S=i=>{v=i??new k(P)},u=()=>(v||S(),v),x=i=>{P=i},q=(...i)=>u().bindKey(...i),H=(...i)=>u().unbindKey(...i),F=(...i)=>u().bindKeyCombo(...i),U=(...i)=>u().unbindKeyCombo(...i),j=(...i)=>u().checkKey(...i),G=(...i)=>u().checkKeyCombo(...i),D=y.normalizeKeyCombo,T=y.stringifyKeyCombo,N=y.parseKeyCombo,J=(i={})=>{let e,t,n,s;return Object.assign(new k({...i,onActive(c){e=c},onInactive(c){t=c},onKeyPressed(c){n=c},onKeyReleased(c){s=c}}),{activate(){e()},deactivate(){t()},press(c){n({composedPath:()=>[],...c})},release(c){s({composedPath:()=>[],...c})}})};r.Keystrokes=k,r.bindKey=q,r.bindKeyCombo=F,r.checkKey=j,r.checkKeyCombo=G,r.createTestKeystrokes=J,r.getGlobalKeystrokes=u,r.normalizeKeyCombo=D,r.parseKeyCombo=N,r.setGlobalKeystrokes=S,r.setGlobalKeystrokesOptions=x,r.stringifyKeyCombo=T,r.unbindKey=H,r.unbindKeyCombo=U,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
